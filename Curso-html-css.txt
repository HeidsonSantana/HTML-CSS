Lógica de programação 
Usar os 5 Q´s para destrinchar os probemas
1.quais são os dados de entrada?
2. o que fazer com esses dados? (manipulação)
3. quais as restrições deste problema? (o que eu não quero que aconteça, exceções)
4. qual é o resultado esperado?
5. qual é a sequência de passos para obter o resultado? (algoritmo)


Anotações HTML5 

<br> --> tag espaço 
<!-- --> Tag para comentários 
Todo símbolo começa com & (e comercial) e fecha com ;
&euro;
&lt; (let than) = símbolo de menor <
&gt; (great than) = símbolo de maior >
&copy; 

todo emoji começa com &#x (hexadecimal) e fecha com ; 
para descobrir os códigos dos emojis procurar na emojipedia

&#x1F596; emoji startrek

sites para imagens - pexels e unplash, editor de imagem - GIMP

O formato JPEG é compactado e de bom uso para imagens muito grandes de fundo de site, por exemplo.
O formato PNG é bom quando se precisa de uma interação na foto (imagens com fundo transparente)

para exportar as imagens para o vscode usa-se a tag <img e em src segura a tecla ctrl + space (aparece uma lista com as imagens na pasta do projeto)
para copiar imagens da internet clica com o botão direito do mouse em copiar endereço da imagem e cola no vscode
obs: quando o arquivo fica com a imagem quebrada é sinal que o nome do arquivo está errado no vscode

Para pesquisa de ícones de favoritos pode-se usar o site iconarchive, para criação pode-se usar o site favicon.cc e para edição o favicon.io

Para subir o icone para o arquivo html usa-se dentro da tag head o seguinte: escreve link e usa a opção do link:favicon. Dentro das aspas do href segura ctrl + space e puxa a imagemno formato .ico que desejar

 
Hierarquia das tag´s de títulos
DO <h1> ao <h6> e <p> para parágrafos.
Maneira de colocar o <b>termo em negrito</b> por uma tag de forma
e a maneira do <strong>negrito</strong> com tag semântica.

obs: O HTML está restrito a semântica (significado) e não a formas. Tudo que é forma fica para o CSS. Exemplo: centralização de texto, cor e tamanho da fonte ou da página. Ficar atento as tag´s obsoletas que podem parar de funcionar a qualquer momento.

Se eu tenho um texto e quero add uma tag de maneira mais rápida eu seleciono o texto e seguro ctrl + shit + p, coloco > e busco por envelope com a abriatura, seleciono e digito o nome da tag (ex: I p/ itálico (ñ semântica), p para parágrafo, em p/ itálico (semântica), mark para marcador de texto)

quando a gente quer personalizar uma tag como a mark mudando a cor, por exemplo, dentro da tag vc chama o CSS, como parâmetro da tag, com o style: <mark style="backgroun-color: blue"> texto qualquer </mark> 

obs se eu coloco o style dentro da tag ele é específico pra ela e quando eu chamo novamente a tag ela não herda a estilização. Para que isso aconteça eu tenho que abrir a tag <style> na head ou no arquivo .css e estilizá-lo por lá.

Para realizar o chamado do CSS para o HTML usa-se a tag <style> na head e dentro o body{ e dentro das chaves o estilo que vc quer como background-color e etc}

ALgumas TAG´s 
<del> para texto excluído (riscado) 
Para tamanho de letras usa no css o font-size em px
<ins> para texto inserido (sublinhado)
<sup> para texto sobrescrito (tipo x²: envelopa o número ao quadrado)
<sub> para texto sobrescrito (tipo H2O: envelopa o número 2)

Para mudança de código-fonte pode-se usar a tag <code > para formatação melhor das letras e a tag <pre> pra deixar os códigos indentados na página
 para citações simples usa-se a tag <q> e para citações completas usa-se a tag <blockquote> e com o parâmetro cite = "" (copiar a URL do local do texto)
 para abreviações pode-se envelopar a abreviação com a tag <abbr>

Para criação de listas ordenadas usa-se a tag <ol> e não-ordenadas a tag <ul> e cada item de lista é pela tag <li>.
Caso vc queira mudar o tipo de ordenação é só usar o parâmetro type ="" e se quiser que não começe do 1 usa outro parâmetro chamado start="" .

Lista de definições 
<dl> 
   <dt>
   <dd>

Tag de âncora(hyperlink) para links externos:
 <a href=" URL completa" target="_blank" rel="external"> 
obs: para não sobrepor o seu site e abrir em uma nova guia acrescenta dentro da TAG o target e o rel

Tag de âncora(hyperlink) para links internos:
<a href=" aqui use ctrl + space para procurar a imagem dentro da sua pasta no vscode "

Vídeo de edição de imagem no GIMB ( 31 do html guanabara)
<picture> 
  <source media="(max-width: 750px)" srcset="imagens/foto-p.png" type="image/png">
  <source media="(max-width: 1050px)" srcset="imagens/foto-m.png" type="image/png">
  <img src="imagens/foto-g.png" alt="Imagem flexivel">
</picture>    
     --> esse comando irá tornar sua foto adaptável para diferentes tamanhos de tela (celular, tablet, note, pc)

No caso de vídeos é interessante ter também, como o áudio, algumas opções em diferentes formatos. 
Usar o programa handbrake (aula 34 -modulo 1) para editar em diferentes formatos 
<video width="500" poster="imagens que você queira usar como capa do vídeo" controls> 
	<source src="usa ctrl + space para procurar os vídeos" type="video/mp4"> 
	<source src="usa ctrl + space para procurar os vídeos" type="video/mp4"> 
	<source src="usa ctrl + space para procurar os vídeos" type="video/webm"> 
	<source src="usa ctrl + space para procurar os vídeos" type="video/ogg"> 
	<p> Seu navegador não tem compatibilidade com reprodução de vídeos</p>
</video>
 Obs: O uso dessa tag associado à hospedagem local do cliente pode gerar um gasto enorme de consumo de banda, necessita avisar ao cliente

A melhor maneira para não gastar com isso é inserir vídeos do próprio youtube ou do vimeo(melhor qualidade) na aba compartilhar e depois em incorporar (já entrega o código HTML pronto)

Para o CSS nos podemos usar os 3 métodos: inline (dentro de cada tag), local (na área do head de cada página) e externo (faz a chamada do arquivo somente nas páginas) 
Preferencialmente usar sempre o 3 método. 
na aba do head cria um link:css e segura ctrl + clique para criar o arquivo .css 
No cabeçalho acrescenta @charset "UTF-8"; para regularizar as acentuações

As cores remetem a sentimentos e saber usá-las faz toda diferença (olhar material PDF do curso em vídeo) 
As cores são formadas pela combinação de RGB(red,grenn,blue) e podemos representá-las no CSS por nome, hexadecimal(#00ff00), sistema RGB(0,255,0), HSL (hue, Sturation, luminosity) (240, 100, 50)

Mas no Vscode se a gente colocar a cor e passar o mouse em cima nos teremos a possibilidade de mudar por ali mesmo.
<h2 style="background-color: blue; color:white;">    </h2>
 para harmonização de cores podemos usar o ciclo cromático
para uso online acessar o site adobecolor.com ( existe uma ferramenta de extrair tema que consiste em colocar uma foto e extrair as cores dela) e uma outra ferramenta interessante é a paletton.com
e pra quem ta perdido kkkk pode usar o coolors.com. O plugin colorzilla na loja da chrome consegue pegar qual cor é do site.

Agora no Css para criar uma cor degradê usa-se a tag background-image e o parâmetro linear-gradient(to right or to left or to top... , cor 1, cor 2, cor 3...)
para configuração global do CSS usa-se o * 
*{
	height: 100%
}

dentro do body normalmente usa-se a tag <main> para identificar o conteúdo principal

 Tipografia (estudo da grafia) 
Basicamente toda vez que queremos criar uma nova tipografia começamos pela letra x que dita qual a altura básica das outras minúsculas (altura x)
A altura do corpo é a altura de todas as letras (maiúsculas e minúsculas) e é a que eu uso para definir a fonte no CSS
Outra coisa importante são as serifas (prolongamentos das letras) e elas criam uma linha imaginária que nosso cérebro interpreta como a linha das letras (caso em que vc consegue ler mesmo com as letras bagunçadas)
vc escolhe as fontes por categorias (serifadas (escolha para impressões), sans-serif (escolha para telas), monoespaçada (todas as letras ocupam o mesmo espaço), handwriting (simula escrita a mão), display (não segue as regras, mais usada para filmes ou algo do tipo...)

Para texto preferência para letra preta e branco no fundo
na declaração da fonte usa-se o font-family: (e aqui é interessante usar as safe combinations - mais de uma fonte para que em caso de navegadores ou dispositivoes diferentes o site rode com alguma das opções que deseja) Digita Css web safe fonts (site w3schools)

Para o tamanho das fontes nos temos a opção de usar as medidas absolutas (cm,mm,in(polegada), px, pt, pc) e as medidas relativas (em(altura M maiúsculo), ex(altura x), rem, vw(view), vh, %)
normalmente vamos usar o em ou o px (recomendações da WTC), melhor usar o em (porcentagem do tamanho padrão da fonte = 16px) 
font-size: 1em;

Para o peso da fonte vamos usar de exemplo a fonte "Work Sans" (necessita importar uma url com @import url(...));
font-weight: (lighter normal bold bolder) ou 100 - 900;
font-style:(italic,...);
text-decoration: underline(sublinado);

Usa-se o shorthand font para condensar todas essas configurações (font-family,font-size,font-style, font-weight) em uma linha só
a ordem é ( font-style -> font-weight -> font-size -> font-family ) da maneira abaixo

font: italic bolder 3em 'Work Sans', sans-serif;

Para usar fontes externas pode-se usar o Google Fonts (fonts.google.com) e lá pode-se escolher as fontes por categorias e add as fontes e vai em embed para copiar o @import para o CSS
Normalmente usa-se 3 fontes, não mais que isso. Uma para os grandes títulos, uma para destaque e uma para o texto normal

Para fontes específicas que não tenham no google fonts no site dafont.com vc pode baixar alguns arquivos ou se o cliente já vim com o arquivo .ttf ou .otf e joga o arquivo na pasta do projeto então vc usa na tag style o @font-face 
@font-face {
	font-family:   ;
	src: url('love larry.otf') format( opentype (otf), truetype (ttf), embedded-opentype, truetype-aat (apple), svg);	
}
Dá pra usar a extensão fonts ninja na chrome web store para identicar qual fonte os sites usam.

Se o texto estiver dentro de uma imagem pode acessar o whatfontis.com (melhor dos 3), freequirrel.com e myfonts.com
 
Para alinhamentos do texto usamos os 
text-align: left, right, center, justify (para alinhar o texto conforme reduz e aumenta a tela);
text-indent: (indentar o texto) 20px;

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NO HTML podemos criar um, por exemplo, <h1 id="alguma coisa"> </h1>           /* tudo que em HTMLé id = em CSS #
e no arquivo CSS       h1#algumacoisa ou somente #principal{                     em HTML é class = em CSS é .  */
	caracteristicas desse meu h1
}

O problema do ID é que só podemos ter um ID por arquivo .CSS. Para resolver este problema existem as classes (usando .nomedaclasse dentro do CSS)
dentro da tag HTML podemos colocar mais de uma classe, por exemplo:
 <h2 class="avancado destaque"> BLA BLA BLA </h2>    (classes . avancado e .destaque)

div é uma caixa que vai do início ao final da tela com tamanho padrão de 1em. 
Para alterar o tamanho da div posso colocar no css height(altura): ...px; e width(largura): ...px;
Com o display podemos deixar tudo em linha com o inline-block; ou no futuro aprenderemos o flex 
também podemos alterar a bordar com border: 1px solid black(exemplo);

# é id . é css e : é pseudoclasse (relacionadas a um elemento ou a uma classe) exemplo: div:hover(qdo passar o mouse em cima) {backgroundcolor: black;} 

 div > p (significa que p é um "filho" da div) { display:none;} -para não mostrar o texto
se eu quiser que quando eu passe o mouse em algo com o hover apareça esse texto eu crio um div:hover {display:block;} no CSS

:: são para pseudoelementos, exemplo: a::after (siginifica que depois de uma ação eu posso colocar coisas {content : 'algo'; text-decoration: none; ...}

Todo conteúdo em HTML é feito por caixas. Uma caixa tem características tais como height(altura), width(largura), border(borda), padding(preenchimento entre o traço da caixa e a borda), 
margin(preenchimento externo depois da borda), outline (linha ao redor da borda).
Também existe dois tipos de caixa: box level e inline-level. O box-level ocupa sempre 100% viewport(área da página) e se ajusta conforme ela aumenta ou diminui, 
também a cada nova caixa dentro dele ele coloca um espaçamento, exemplo de uma caixa de <p> pra outra <p>. Exemplo de box-level (<div>)
Já a inline-level não pula a linha e ocupa toda a tela, ele pula para o lado e faz a caixa do tamanho pra conter seu conteúdo (<span>)

User agent(navegador), para alterar o padding, margin etc top(cima), bottom(abaixo), right(direita), left(esquerda), auto(centralizar)
Para simplificar podemos usar os shorthands (o sentido das propriedades é sempre o do relógio(cima,direita,baixo,esquerda))

obs: display block ocupa toda a tela do site e inline fica em linha. E dá pra fazer ele inline-block(será inline mas com características de block como ajustar altura)

Hoje vc consegue separar seu site de forma semântica usando tag´s que são div´s mas com semântica
<header> <!-- para o cabeçalho -->          <h1> , <nav>(menu)
<main>  <!-- para o conteúdo principal -->  <p>, <section>, <article>, <aside> (conteúdo periférico ao artigo)
<footer> <!-- para o rodapé -->

no Css e no elemento podemos colocar uma sombra com o box-shadow (possui 4 parâmetrod: sombras horizontais, sombras verticais, espalhamento e cor): 1px 1 px 1px black;
dica: no deaftools (navegador-inspecionar) vc pode ir na caixa que quer alterar, em 3 pontinhos e escolher a borda, configurar, copiar e colar no css do arquivo.


-----COISAS PERDIDAS------------------------------


Podemos usar uma imagem de fundo no CSS com o background-image: url('caminho da imagem(seja local ou na web)'); seja no body, em uma div, etc...


